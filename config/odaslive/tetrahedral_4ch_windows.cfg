# Windows configuration file for Teensy 4.1 Tetrahedral 4-channel Microphone Array
# Uses Windows audio APIs instead of ALSA/PulseAudio

version = "2.1";

# Raw audio input from Teensy USB audio interface
raw: 
{
    fS = 44100;
    hopSize = 512;
    nBits = 16;
    nChannels = 4; 

    # Input from Teensy USB audio device (Windows)
    interface: {
        type = "soundcard";
        card = 0;  # Default audio device - will auto-detect Teensy
        device = 0;
    }
}

# Channel mapping for 4-channel array
mapping:
{
    map: (0, 1, 2, 3);
}

# General configuration for tetrahedral array
general:
{
    
    epsilon = 1E-12;

    size: 
    {
        hopSize = 512;
        frameSize = 1024;
    };
    
    samplerate:
    {
        mu = 44100;
        sigma2 = 0.01;
    };

    speedofsound:
    {
        mu = 343.0;
        sigma2 = 25.0;
    };

    # Tetrahedral microphone positions (meters)
    # Based on array_geometry.json: 25mm from center = 0.025m
    mics = (
        
        # Microphone 0 - Vertex 0 (+X,+Y,+Z)
        { 
            mu = ( +0.025, +0.025, +0.025 ); 
            sigma2 = ( +0.000, +0.000, +0.000, +0.000, +0.000, +0.000, +0.000, +0.000, +0.000 );
            direction = ( +0.577, +0.577, +0.577 );
            angle = ( 80.0, 90.0 );
        },

        # Microphone 1 - Vertex 1 (+X,-Y,-Z)
        { 
            mu = ( +0.025, -0.025, -0.025 ); 
            sigma2 = ( +0.000, +0.000, +0.000, +0.000, +0.000, +0.000, +0.000, +0.000, +0.000 );
            direction = ( +0.577, -0.577, -0.577 );
            angle = ( 80.0, 90.0 );
        },

        # Microphone 2 - Vertex 2 (-X,+Y,-Z)
        { 
            mu = ( -0.025, +0.025, -0.025 ); 
            sigma2 = ( +0.000, +0.000, +0.000, +0.000, +0.000, +0.000, +0.000, +0.000, +0.000 );
            direction = ( -0.577, +0.577, -0.577 );
            angle = ( 80.0, 90.0 );
        },

        # Microphone 3 - Vertex 3 (-X,-Y,+Z)
        { 
            mu = ( -0.025, -0.025, +0.025 ); 
            sigma2 = ( +0.000, +0.000, +0.000, +0.000, +0.000, +0.000, +0.000, +0.000, +0.000 );
            direction = ( -0.577, -0.577, +0.577 );
            angle = ( 80.0, 90.0 );
        }
        
    );

    # Full 3D spatial coverage
    spatialfilters = (
        {
            direction = ( +0.000, +0.000, +1.000 );
            angle = (180.0, 180.0);
        }
    );  

    nThetas = 360;
    gainMin = 0.25;

};

# Stationary noise estimation
sne:
{
    
    b = 3;
    alphaS = 0.1;
    L = 150;
    delta = 3.0;
    alphaD = 0.1;

}

# Sound Source Localization
ssl:
{

    nPots = 4;
    nMatches = 10;
    probMin = 0.5;
    nRefinedLevels = 2;
    interpRate = 4;

    scans = (
        { level = 2; delta = -1; },
        { level = 4; delta = -1; },
        { level = 8; delta = -1; }
    );

    potential: {
        format = "undefined";
        interface: {
            type = "blackhole";
        };
    };

};

# Sound Source Tracking
sst:
{  

    mode = "kalman";
    add = "dynamic";

    active = (
        { weight = 1.0; mu = 0.3; sigma2 = 0.0025 }
    );

    inactive = (
        { weight = 1.0; mu = 0.15; sigma2 = 0.0025 }
    );

    sigmaR2_prob = 0.0025;
    sigmaR2_active = 0.0225;
    sigmaR2_target = 0.0025;
    Pfalse = 0.1;
    Pnew = 0.1;
    Ptrack = 0.8;

    theta_new = 0.9;
    N_prob = 5;
    theta_prob = 0.8;
    N_inactive = ( 150, 200, 250, 250 );
    theta_inactive = 0.9;

    kalman: {
        sigmaQ = 0.001;
    };
   
    particle: {
        nParticles = 1000;
        st_alpha = 2.0;
        st_beta = 0.04;
        st_ratio = 0.5;
        ve_alpha = 0.05;
        ve_beta = 0.2;
        ve_ratio = 0.3;
        ac_alpha = 0.5;
        ac_beta = 0.2;
        ac_ratio = 0.2;
        Nmin = 0.7;
    };

    target: ();

    tracked: {
        format = "undefined";
        interface: {
            type = "blackhole";
        };
    };

}

sss:
{
    
    mode_sep = "dds";
    mode_pf = "ms";

    gain_sep = 1.0;
    gain_pf = 10.0;

    dds: {
    };

    dgss: {
        mu = 0.01;
        lambda = 0.5;
    };

    dmvdr: {
    };

    ms: {
        alphaPmin = 0.07;
        eta = 0.5;
        alphaZ = 0.8;        
        thetaWin = 0.3;
        alphaWin = 0.3;
        maxAbsenceProb = 0.9;
        Gmin = 0.01;
        winSizeLocal = 3;
        winSizeGlobal = 23;
        winSizeFrame = 256;
    };

    ss: {
        Gmin = 0.01;
        Gmid = 0.9;
        Gslope = 10.0;
    }

    separated: {
        fS = 44100;
        hopSize = 512;
        nBits = 16;        
        interface: {
            type = "file";
            path = "separated.raw";
        }        
    };

    postfiltered: {
        fS = 44100;
        hopSize = 512;
        nBits = 16;        
        interface: {
            type = "file";
            path = "postfiltered.raw";
        }        
    };

}

classify:
{
    
    frameSize = 1024;
    winSize = 3;
    tauMin = 32;
    tauMax = 200;
    deltaTauMax = 7;
    alpha = 0.3;
    gamma = 0.05;
    phiMin = 0.15;
    r0 = 0.2;    

    category: {
        format = "undefined";
        interface: {
            type = "blackhole";
        }
    }

}